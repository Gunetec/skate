@{
    ViewData["Title"] = "Solo Leaderboards";
}

<script>
    // TODO - Web Browser Debug
    document.onkeydown = checkKey;

    function checkKey(e) {

        e = e || window.event;

        if (e.keyCode == '13') {
            // enter
            selectElement();
        }
        if (e.keyCode == '27') {
            // esc
            history.back();
        }
        if (e.keyCode == '38') {
            // up arrow
            decrement();
        }
        else if (e.keyCode == '40') {
            // down arrow
            increment();
        }
        else if (e.keyCode == '37') {
           // left arrow
        }
        else if (e.keyCode == '39') {
           // right arrow
        }
    }
    // TODO - End Web Browser Debug

    function selectElement() {
        var selectedId = document.getElementsByClassName('isSelected')[0].id;
        var loc = document.getElementById(selectedId).getAttribute("href");
        window.location = loc;
    }

    function increment() {
        // Get index value
        var index = parseInt(document.getElementById('index').value, 10);

        // Increment
        if (index === 5) {
            // Do nothing
        } else {
            index++;
        
            // Select card based on index, de-select previous card
            var obs = document.getElementById("OverallBoardSales"); //0
            var sre = document.getElementById("SoloRankedEvents");  //1
            var rbs = document.getElementById("RoyaltyBoardSales"); //2
            var cviews = document.getElementById("ContentViews");   //3
            var cvotes = document.getElementById("ContentVotes");   //4
            var pr = document.getElementById("PlayerRecords");      //5
            switch(index) {
                case 1:
                    obs.className = "card card-leaderboard-category";
                    sre.className += " isSelected";
                    break;
                case 2:
                    sre.className = "card card-leaderboard-category";
                    rbs.className += " isSelected";
                    break;
                case 3:
                    rbs.className = "card card-leaderboard-category";
                    cviews.className += " isSelected";
                    break;
                case 4:
                    cviews.className = "card card-leaderboard-category";
                    cvotes.className += " isSelected";
                    break;
                case 5:
                    cvotes.className = "card card-leaderboard-category";
                    pr.className += " isSelected";
                    break;
                default:
                    break;
            }

            // Set value to hidden input
            document.getElementById('index').value = index;
        }
    }

    function decrement() {
        // Get index value
        var index = parseInt(document.getElementById('index').value, 10);

        // If zero set back to max
        if (index === 0) {
            // Do nothing
        } else {
            index--;

            // Select card based on index, de-select previous card
            var obs = document.getElementById("OverallBoardSales"); //0
            var sre = document.getElementById("SoloRankedEvents");  //1
            var rbs = document.getElementById("RoyaltyBoardSales"); //2
            var cviews = document.getElementById("ContentViews");   //3
            var cvotes = document.getElementById("ContentVotes");   //4
            var pr = document.getElementById("PlayerRecords");      //5
            switch(index) {
                case 0:
                    sre.className = "card card-leaderboard-category";
                    obs.className += " isSelected";
                    break;
                case 1:
                    rbs.className = "card card-leaderboard-category";
                    sre.className += " isSelected";
                    break;
                case 2:
                    cviews.className = "card card-leaderboard-category";
                    rbs.className += " isSelected";
                    break;
                case 3:
                    cvotes.className = "card card-leaderboard-category";
                    cviews.className += " isSelected";
                    break;
                case 4:
                    pr.className = "card card-leaderboard-category";
                    cvotes.className += " isSelected";
                    break;
                default:
                    break;
            }

            // Set value to hidden input
            document.getElementById('index').value = index;
        }
    }
</script>

<div class="content">
    <div id="Pagination" class="pagination">
        <div id="paginationPrevious" class="card card-pagination card-pagination-previous"><p>&lt; Previous</p></div>
        <div id="paginationNext" class="card card-pagination card-pagination-next"><p>Next &gt;</p></div>
    </div>

    <a id="OverallBoardSales" class="card card-leaderboard-category isSelected" href="/skate3/webkit/PS3/English/i/Leaderboards/Solo/Overall">
        <img src="/images/decks.png" />Overall Board Sales
    </a>
    <a id="SoloRankedEvents" class="card card-leaderboard-category">
        <img src="/images/decks.png" />Solo Ranked Events
    </a>
    <a id="RoyaltyBoardSales" class="card card-leaderboard-category">
        <img src="/images/decks.png" />Royalty Board Sales
    </a>
    <a id="ContentViews" class="card card-leaderboard-category">
        <img src="/images/decks.png" />Content Views
    </a>
    <a id="ContentVotes" class="card card-leaderboard-category">
        <img src="/images/decks.png" />Content Votes
    </a>
    <a id="PlayerRecords" class="card card-leaderboard-category">
        <img src="/images/decks.png" />Player Records
    </a>
    
    <input type="hidden" id="index" value="0"/>
    <a id="dpad_up_button" onClick="javascript:decrement();"></a>
    <a id="dpad_down_button" onClick="javascript:increment();"></a>
    <a id="fake_cross_button" onClick="javascript:selectElement();"></a>
    <a id="fake_circle_button" onClick="javascript:history.back();"></a>
</div>